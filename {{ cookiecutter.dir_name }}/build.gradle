buildscript {
    repositories {
        jcenter()
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.0'
    }
}

task buildPythonDebug {
    outputs.dir "build/intermediates/classes/debug/python"
    doLast {
        exec {
            commandLine "voc -v -p app -o build/intermediates/classes/debug app".split()
        }
        exec {
            commandLine "voc -v -p app_packages -o build/intermediates/classes/debug app_packages".split()
        }
    }
}

task buildPythonRelease {
    outputs.dir "build/intermediates/classes/release/python"
    doLast {
        exec {
            commandLine "voc -v -p app -o build/intermediates/classes/release app".split()
        }
        exec {
            commandLine "voc -v -p app_packages -o build/intermediates/classes/release app_packages".split()
        }
    }
}

task run {
    doLast {
        exec {
            commandLine "adb shell am start -n {{ cookiecutter.bundle }}.{{ cookiecutter.app_name }}/android.{{ cookiecutter.class_name }}".split()
        }
    }
}

apply plugin: 'com.android.application'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
        }
    }
}

project.afterEvaluate {
    run.dependsOn installDebug
}

android.applicationVariants.all {
    def genTask = it.buildType.debuggable ? buildPythonDebug : buildPythonRelease
    it.registerPreJavacGeneratedBytecode(genTask.outputs.files)
}

repositories {
    google()
    jcenter()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
}
